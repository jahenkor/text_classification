Use: term frequency, word-count, tf-idf, and maybe cosine similarity to determine the best technique to use.

Knn: Euclidean distance, between vectors?

Compare and contrast different model accuarcy. Split training data, 90-10 (train-test), and see if your model accurately predicts the test data. Use the best technique on the miner.

Links:
KNN : https://machinelearningmastery.com/tutorial-to-implement-k-nearest-neighbors-in-python-from-scratch/

Tf-idf sent anal: https://appliedmachinelearning.blog/2017/02/12/sentiment-analysis-using-tf-idf-weighting-pythonscikit-learn/

Bag of words/Word count: https://machinelearningmastery.com/deep-learning-bag-of-words-model-sentiment-analysis/
